"""
    id посылки - 70295709

        -- ПРИНЦИП РАБОТЫ –-

    https://ru.wikipedia.org/wiki/Задача_разбиения_множества_чисел - основная суть алгоритма,

    однако dp имеет одно измерение, т.к. информация о состоянии ячейки основывается на состоянии (i-j) ячейки
    (Если "2" принадлежит множеству {2,3}, то оно соответственно будет принадлежать родительскому
     множеству {2,3,4} => данные для последующих множеств для индекса "2" можно не хранить)

        -- ДОКАЗАТЕЛЬСТВО КОРРЕКТНОСТИ –-
        
    https://ru.wikipedia.org/wiki/Задача_разбиения_множества_чисел

        -- ВРЕМЕННАЯ СЛОЖНОСТЬ –-

    O(K*N), где N — число элементов во входном множестве, а K — сумма элементов во входном множестве.

        -- ПРОСТРАНСТВЕННАЯ СЛОЖНОСТЬ --

    O(K)
"""
def find(arr):
    sum_arr = sum(arr)

    if sum_arr % 2 != 0:
        return False

    half_sum = sum_arr // 2
    dp = [True] + [False] * half_sum
    for i in arr:
        for j in range(half_sum, i - 1, -1):
            dp[j] = dp[j - i] or dp[j]
    return dp[-1]
input()
print(find(list(map(int,input().split()))))
        